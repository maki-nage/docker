name: Docker release deploy

on: [push]

jobs:
  makinage-cpython:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "GIT_TAG_REF=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: makinage/makinage
          dockerfile: ./cpython/Dockerfile
          tags: ${{ env.RELEASE_VERSION }}-py

  makinage-cpython-36:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "GIT_TAG_REF=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV        
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: makinage/makinage
          dockerfile: ./cpython/Dockerfile-3.6
          tags: ${{ env.RELEASE_VERSION }}-py3.6
        
        
  makinage-pypy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "GIT_TAG_REF=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV        
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: makinage/makinage
          dockerfile: ./pypy/Dockerfile
          tags: ${{ env.RELEASE_VERSION }}, ${{ env.RELEASE_VERSION }}-pypy

  makinage-serve:  
    needs: makinage-cpython
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "GIT_TAG_REF=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV        
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: makinage/makinage-serve
          path: ./serve
          tags: ${{ env.RELEASE_VERSION }}

  makinage-serve-36:
    needs: makinage-cpython-36    
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "GIT_TAG_REF=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV        
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: makinage/makinage-serve
          path: ./serve
          dockerfile: ./serve/Dockerfile-3.6
          tags: ${{ env.RELEASE_VERSION }}-py3.6
        
  makinage-model-publisher:
    needs: makinage-pypy
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "GIT_TAG_REF=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV        
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: makinage/model-publisher
          path: ./model-publisher
          tags: ${{ env.RELEASE_VERSION }}
        